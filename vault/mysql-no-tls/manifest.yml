---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consul-template
  namespace: default
data:
  config.hcl: |
    vault {
      renew_token = true
      vault_agent_token_file = "/home/vault/.vault-token"
      retry {
        backoff = "1s"
      }
    }

    template {
      destination = "/var/run/secrets/vault-project.io/dbcreds.json"
      contents = <<EOF
    {{- with secret "database/creds/app-for-mysql-mg-vault" }}
    {
        "username": "{{ .Data.username }}",
        "password": "{{ .Data.password }}"
    }
    {{ end }}
    EOF
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-mysql-no-tls
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-mysql-no-tls
  template:
    metadata:
      labels:
        app: vault-mysql-no-tls
    spec:
      serviceAccountName: vault-mysql-no-tls
      shareProcessNamespace: true
      securityContext:
        # This should be set to the uid of the main application container
        # so that secret files rendered by the consul-template container can
        # be read by the main application.
        fsGroup: 2222
      volumes:
        - name: vault-auth
          emptyDir:
            medium: Memory
        - name: vault-secrets
          emptyDir:
            medium: Memory
        - name: config
          configMap:
            name: consul-template
            items:
              - path: config.hcl
                key: config.hcl
                mode: 0644
      initContainers:
        - name: vault-authenticator
          image: sethvargo/vault-kubernetes-authenticator:0.2.0
          imagePullPolicy: Always
          volumeMounts:
            - name: vault-auth
              mountPath: /var/run/secrets/vaultproject.io
          env:
            - name: VAULT_ADDR
              valueFrom:
                secretKeyRef:
                  name: vault-mysql-no-tls
                  key: VAULT_ADDR
            - name: VAULT_SKIP_VERIFY
              value: "true"
            - name: VAULT_ROLE
              value: app-for-mysql-mg-vault
          securityContext:
            # Set to same user as consul-template container to let it read
            # and renew the vault token.
            runAsUser: 100
      containers:
        - name: consul-template
          image: hashicorp/consul-template:0.24.1-alpine
          securityContext:
            capabilities:
              add: ["SYS_PTRACE"]
          volumeMounts:
            - name: vault-auth
              mountPath: /home/vault
            - name: vault-secrets
              mountPath: /var/run/secrets/vault-project.io
            - name: config
              mountPath: /etc/consul-template
          env:
            - name: HOME
              value: /home/vault
            - name: VAULT_ADDR
              valueFrom:
                secretKeyRef:
                  name: vault-mysql-no-tls
                  key: VAULT_ADDR
            - name: VAULT_SKIP_VERIFY
              value: "true"
          args:
            - "-config=/etc/consul-template/config.hcl"
            - "-log-level=debug"
        - name: vault-mysql-no-tls
          image: yanhan/vault-mysql-no-tls:0.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health-check
              port: http
            successThreshold: 1
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health-check
              port: http
            successThreshold: 2
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: vault-secrets
              mountPath: /var/run/secrets/vault-project.io
          env:
            - name: DB_HOST
              value: mysql-mg-vault
            - name: DB_SECRETS_FILE
              value: /var/run/secrets/vault-project.io/dbcreds.json
---
apiVersion: v1
kind: Service
metadata:
  name: vault-mysql-no-tls
  namespace: default
spec:
  type: NodePort
  selector:
    app: vault-mysql-no-tls
  ports:
    - name: http
      port: 80
      targetPort: http
