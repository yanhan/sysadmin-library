apiVersion: v1
kind: Service
metadata:
  name: tls-rds-python
  namespace: default
spec:
  type: NodePort
  selector:
    app: tls-rds-python
  ports:
    - name: http
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tls-rds-python
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tls-rds-python
  template:
    metadata:
      labels:
        app: tls-rds-python
    spec:
      containers:
        - name: web
          image: yanhan/tls-rds-python:0.1
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: PORT
              value: "8080"
            - name: RDS_TLS_CA_CERT_PATH
              value: /etc/ssl/certs/rds-combined-ca-bundle.pem
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: tls-rds
                  key: DB_HOST
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: tls-rds
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tls-rds
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: tls-rds
                  key: DB_NAME
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
